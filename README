NAME
    Net::Riak - Interface to Riak

VERSION
    version 0.02

SYNOPSIS
        my $client = Net::Riak->new(host => 'http://10.0.0.40:8098');
        my $bucket = $client->bucket('blog');
        my $obj    = $bucket->new_object('new_post', {title => 'foo', content => 'bar'});
        $obj->store;

        my $obj = $bucket->get('new_post');

DESCRIPTION
  ATTRIBUTES
    host
        Hostname or IP address (default 'http://127.0.0.1:8098')

    prefix
        Interface prefix (default 'riak')

    mapred_prefix
        MapReduce prefix (default 'mapred')

    r   R value setting for this client (default 2)

    w   W value setting for this client (default 2)

    dw  DW value setting for this client (default 2)

    client_id
        client_id for this client

  METHODS
METHODS
  bucket
        my $bucket = $client->bucket($name);

    Get the bucket by the specified name. Since buckets always exist, this
    will always return a Net::Riak::Bucket

  is_alive
        if (!$client->is_alive) {
            ...
        }

    Check if the Riak server for this client is alive

  add
        my $map_reduce = $client->add('bucket_name', 'key');

    Start assembling a Map/Reduce operation

  link
        my $map_reduce = $client->link();

    Start assembling a Map/Reduce operation

  map
        my $map_reduce = $client->add('bucket_name', 'key')->map("function ...");

    Start assembling a Map/Reduce operation

  reduce
        my $map_reduce = $client->add(..)->map(..)->reduce("function ...");

    Start assembling a Map/Reduce operation

AUTHOR
      franck cuny <franck@lumberjaph.net>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2010 by linkfluence.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

